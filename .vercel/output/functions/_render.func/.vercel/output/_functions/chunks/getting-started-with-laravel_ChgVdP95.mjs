const id = "getting-started-with-laravel.md";
						const collection = "blog";
						const slug = "getting-started-with-laravel";
						const body = "\n# Getting Started with Laravel: A Beginner's Guide\n\nLaravel is a powerful PHP framework for web application development. This guide will walk you through the process of setting up and starting a new Laravel project.\n\n## Prerequisites\n\nBefore we begin, make sure you have the following installed on your system:\n\n- PHP (7.3 or higher)\n- Composer (Dependency Manager for PHP)\n- Node.js and npm (for frontend assets)\n\n## Step 1: Installing Laravel\n\n1. Open your terminal or command prompt.\n2. Run the following command to install Laravel globally:\n\n   ```\n   composer global require laravel/installer\n   ```\n\n## Step 2: Creating a New Laravel Project\n\n1. Navigate to the directory where you want to create your project.\n2. Run the following command to create a new Laravel project:\n\n   ```\n   laravel new my-project\n   ```\n\n   Replace `my-project` with your desired project name.\n\n3. Once the installation is complete, navigate into your project directory:\n\n   ```\n   cd my-project\n   ```\n\n## Step 3: Configure the Environment\n\n1. Open the `.env` file in your project root directory.\n2. Configure your database settings:\n\n   ```\n   DB_CONNECTION=mysql\n   DB_HOST=127.0.0.1\n   DB_PORT=3306\n   DB_DATABASE=your_database_name\n   DB_USERNAME=your_username\n   DB_PASSWORD=your_password\n   ```\n\n## Step 4: Start the Development Server\n\n1. In your project directory, run the following command:\n\n   ```\n   php artisan serve\n   ```\n\n2. Your Laravel application should now be running at `http://localhost:8000`.\n\n## Step 5: Exploring Laravel's Structure\n\nLaravel follows the MVC (Model-View-Controller) architecture. Here's a brief overview of the main directories:\n\n- `app/`: Contains the core code of your application\n- `config/`: All of your application's configuration files\n- `database/`: Database migrations and seeders\n- `public/`: The entry point for all requests entering your application\n- `resources/`: Views, raw assets (SASS, JS, etc), and language files\n- `routes/`: All route definitions for your application\n\n## Step 6: Creating Your First Route\n\n1. Open `routes/web.php`.\n2. Add a new route:\n\n   ```php\n   Route::get('/hello', function () {\n       return 'Hello, Laravel!';\n   });\n   ```\n\n3. Visit `http://localhost:8000/hello` in your browser to see your new route in action.\n\n## Next Steps\n\nCongratulations! You've set up your first Laravel project. Here are some next steps to continue your Laravel journey:\n\n1. Learn about Laravel's Eloquent ORM for database operations\n2. Explore Blade templating for creating views\n3. Understand Laravel's authentication system\n4. Dive into Laravel's documentation for more advanced features\n\nHappy coding with Laravel!\n";
						const data = {title:"Getting Started with Laravel: A Beginner's Guide",description:"Getting Started with Laravel: A Beginner's Guide",pubDate:new Date(1725292800000),heroImage:"/blog-placeholder-4.jpg"};
						const _internal = {
							type: 'content',
							filePath: "C:/Ahdirmai/Porto/astro/Blog-ahdirmai/src/content/blog/getting-started-with-laravel.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
